{"remainingRequest":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/babel-loader/lib/index.js!/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/src/pages/authority/sub/WalletLoginForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/src/pages/authority/sub/WalletLoginForm.vue","mtime":1633589462000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/src/pages/authority/sub/WalletLoginForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"w-full\">\r\n    <div v-if=\"mode=='login'\" class=\"p-10\">\r\n      <div class=\"h-1/2 block\"></div>\r\n      <div class=\"text-lg\">\r\n        <a href=\"#\" class=\"underline  mr-3\">SIGN IN</a>\r\n      </div>\r\n      <div class=\"my-5 flex flex-col gap-2 text-sm\">\r\n        <p class=\"w-full text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-gray-900 hover:text-white\"\r\n          :class=\"[target == 'metamask'? 'bg-black text-white': 'bg-white text-black',]\" \r\n          @click=\"target = 'metamask';mMetamask();\">Metamask\r\n        </p>\r\n        <p class=\"w-full text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-gray-400 hover:text-white\"\r\n        :class=\"[target == 'walletconnect'? 'bg-gray-500 text-white': 'bg-white text-black',]\" \r\n        @click=\"target = 'walletconnect';other()\">\r\n          Wallet Connect\r\n        </p>\r\n        <p class=\"w-full text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-gray-400 hover:text-white\"\r\n          :class=\"[target == 'walletlink'? 'bg-gray-500 text-white': 'bg-white text-black',]\"\r\n           @click=\"target = 'walletlink';other()\">\r\n           Wallet Link\r\n        </p>\r\n        <p class=\"w-full text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-gray-400 hover:text-white\"\r\n          :class=\"[target == 'Kaikas'? 'bg-gray-500 text-white': 'bg-white text-black',]\" \r\n          @click=\"target = 'Kaikas';other()\">\r\n          Kaikas\r\n        </p>\r\n      </div>\r\n      <p class=\"text-red-600 font-light text-sm my-5 transition duration-150 ease-in-out h-4  \">{{error_msg}}</p>\r\n      <div>\r\n        <a href=\"./\" class=\"home text-sm font-semibold\"><span class=\"mr-2\">&#60;</span> Back to Home</a>\r\n      </div>\r\n      <div class=\"mt-16 home text-sm font-extralight\">No Accounts?\r\n        <a href=\"./login.html?mode=signup\" class=\"pl-3 font-semibold hover:underline hover:text-black\">Sign Up</a>\r\n      </div>\r\n    </div>\r\n    <ResendMail v-else-if=\"mode=='resend'\"  v-on:onExit=\"mode='login';error_msg=''\"/>\r\n    <div v-else class=\"w-full h-60 items-center justify-center\">\r\n      <h>invalid mode</h>\r\n    </div>\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport WalletService from \"../../../services/wallet.service\";\r\nimport SessionService from \"../../../services/session.service.js\";\r\nimport  ResendMail from \"./ResendMail\"\r\nexport default {\r\n  name: \"login\",\r\n  created: function() {\r\n    this.mode = new URL(location.href).searchParams.get(\"mode\");\r\n  },\r\n  computed: {\r\n    web3() {\r\n      // return this.$store.state.web3\r\n      //\r\n      let web3 = new Web3(window.web3.currentProvider);\r\n      return web3;\r\n    },\r\n  },\r\n  components: {\r\n    ResendMail\r\n  },\r\n  data: function() {\r\n    return {\r\n      target: \"\",\r\n      mode: \"login\",\r\n      checkSign: false, //가입여부 확인 데이터(API확인후 반영)\r\n      error_msg:'',\r\n      \r\n    };\r\n  },\r\n  props: {},\r\n  methods: {\r\n    close: function() {\r\n      this.$emit(\"changeHidden\");\r\n    },\r\n    other: function() {\r\n      this.error_msg ='Not support yet'\r\n    },\r\n    mMetamask: async function() {\r\n      this.login()\r\n    },\r\n    checkSession(_address){\r\n      const session = SessionService.loadSession();\r\n      // if (Object.keys(this.session).length < 1){\r\n      WalletService.walletCheck(_address).then((hasAddr) => {\r\n        //해당주소 가입여부 확인\r\n        console.log('checked 결과:',hasAddr)\r\n    \r\n        if (!hasAddr || !hasAddr.data ||  hasAddr.data[0].account === null) {\r\n          console.log(\"등록된 계정이 없음--> go signup\");\r\n        } else {\r\n          if (SessionService.isExpired(session.lastTime)) {\r\n            console.log(\"유효기간이 만료됨\");\r\n            this.caseConnectWallet(hasAddr.data[0]);\r\n          } else {\r\n            console.log(\"로그인된 고객\");\r\n            this.caseSessionAlive(hasAddr.data[0]);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    async login(){\r\n\r\n      // 세션이 무료화\r\n      // this.session = {\r\n      //   lastTime: null,\r\n      //   address: null,\r\n      //   name: null,\r\n      //   avatar: null,\r\n      // };\r\n      SessionService.clear();\r\n      const permissions = await ethereum.request({method: 'wallet_requestPermissions',params: [{eth_accounts: {}}],});\r\n      console.log('permissions::', permissions)\r\n\r\n      const accountsPermission = await permissions.find((permission) => permission.parentCapability === 'eth_accounts');\r\n      console.log(\"accountsPermission\", accountsPermission)\r\n      if (!accountsPermission) {\r\n          console.log('eth_accounts permission successfully requested!');\r\n      }\r\n\r\n      let web3 = new Web3(window.web3.currentProvider)\r\n      let from = await web3.eth.getAccounts();\r\n      const login_wallet = from[0]\r\n      console.log(\"login_wallet::\", login_wallet)\r\n\r\n      var expireDate = new Date();\r\n      // expire date add 1day\r\n      expireDate.setDate(expireDate.getDate() + 1);\r\n      const msgParams = `login ${login_wallet} ${ Date.parse(expireDate) }`\r\n      \r\n      let strMethod = 'personal_sign'\r\n\r\n      let paramVals = [msgParams, login_wallet]\r\n      console.log('params:', strMethod, paramVals, login_wallet)\r\n\r\n      const res= await web3.currentProvider.send(strMethod, paramVals);\r\n      const signature = res.result;\r\n      console.log('서명결과:', signature)\r\n      WalletService.login('ETH', login_wallet, msgParams, res.result).then(res => {\r\n          const acc = res.data;\r\n          console.log('login :', acc)\r\n          SessionService.setItems({\r\n            platform: acc.platform,\r\n            wallet: acc.account,\r\n            nickname: acc.nickname,\r\n            avatar: acc.avatar,\r\n            userId: acc.user_id,\r\n            msg: msgParams,\r\n            sig: signature\r\n          });\r\n\r\n        console.log('saved session::', JSON.stringify(SessionService.loadSession()))\r\n        location.href = \"/\";\r\n\r\n          // location.href = \"/signup.html\";\r\n      }).catch(error => {\r\n          console.log(error)\r\n          this.error_msg = error // 이 값 어디 안쓰는데 저장만하네?\r\n          if(error.response && error.response.data){\r\n            this.error_msg = error.response.data\r\n            console.log('##',error.response.status)\r\n            if(error.response.status ==412){\r\n              this.mode = 'resend'\r\n            }\r\n          }\r\n          console.error(this.error_msg)\r\n      })\r\n\r\n    },\r\n    caseSessionAlive: async function(acc) {\r\n      console.log(\"caseConnectWallet!!!!\");\r\n      if (typeof window.ethereum !== \"undefined\") {\r\n        ethereum.eth_requestAccounts;\r\n        const connetWallet = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        ethereum.request({ method: \"eth_chainId\" });\r\n        const chainId = await window.ethereum.request({\r\n          method: \"eth_chainId\",\r\n        });\r\n\r\n\r\n        //세션정보 저장\r\n        console.log(\"세션정보 저장\");\r\n        SessionService.setItems({\r\n          platform: chainId,\r\n          wallet: connetWallet[0],\r\n          nickname: acc.nickname,\r\n          avatar: acc.avatar,\r\n          userId: acc.user_id\r\n        });\r\n\r\n        location.href = \"/\";\r\n        return connetWallet;\r\n      }\r\n    },\r\n\r\n    onConnect: function(event) {\r\n      //1. 지갑주소가 가입되었는지 여부 확인\r\n      //2-1. 가입되어있을때 바로 메타마스크 연결\r\n      //2-2. 가입 안되어있을때\r\n      //3. 프로필 입력컴포넌트\r\n\r\n      if (this.checkSign === false) {\r\n        //가입안되었을때\r\n        console.log(\"this.checkSign\" + this.checkSign);\r\n\r\n        return;\r\n      } else {\r\n        const msgParams = \"hello\";\r\n        return new Promise(function(resolve, reject) {\r\n          if (typeof window.ethereum !== \"undefined\") {\r\n            ethereum.eth_requestAccounts;\r\n            const connetWallet = window.ethereum.request({\r\n              method: \"eth_requestAccounts\",\r\n            });\r\n            console.log(\"연결완료\");\r\n            resolve(connetWallet);\r\n          }\r\n        })\r\n          .then(async function(connetWallet) {\r\n            // event.preventDefault()\r\n            console.log(\"연결지갑주소\" + connetWallet);\r\n            // const msgParams ='hello'\r\n\r\n            let web3 = new Web3(window.web3.currentProvider);\r\n            let strMethod = \"personal_sign\";\r\n            let from = await web3.eth.getAccounts();\r\n            if (!from[0]) return this.onConnect();\r\n\r\n            let paramVals = [msgParams, from[0]];\r\n            console.log(\"params:\", strMethod, paramVals, from[0]);\r\n\r\n            // this.web3.currentProvider.sendAsync(method, params, from, function (err, result) {\r\n            //   console.log('result:', result)\r\n            // })\r\n\r\n            let res = await web3.currentProvider.send(strMethod, paramVals);\r\n\r\n            // let res = await ethereum.request({ method: strMethod , params: paramVals})\r\n\r\n            console.log(\"서명결과:\", res);\r\n            res.address = connetWallet;\r\n            return res;\r\n          })\r\n          .then(function(res) {\r\n            console.log(\"연결지갑주소2\" + res);\r\n            let a = JSON.stringify(res);\r\n            console.log(res.address.toString());\r\n            let addr = res.address.toString();\r\n            console.log(\"a\" + a);\r\n            // const paramApi = {\r\n            //   \"network\":\"network\",\r\n            //   // \"account\":res.address,\r\n            //   \"account\": \"0x122feb0fc838540a278ad23a8a5b3b232d476087\",\r\n            //   \"user_id\":\"user_id\",\r\n            //   \"chainid\":\"chainid\",\r\n            //   \"alias1\":\"alias1\",\r\n            //   \"alias2\":\"alias2\",\r\n            //   \"avata\":\"avata.jpg\",\r\n            //   \"msg\":msgParams,\r\n            //   \"sig\":res.result,\r\n            //   \"tag\":\"tag\"\r\n            // }\r\n            console.log(\"addr\" + addr);\r\n            console.log(\"res.result.toString()\" + res.result.toString());\r\n            // console.log(msgParams[0].name)\r\n\r\n            //    //지갑 주소 존재여부확인 없으면 가입해야함\r\n            //     WalletServices.check(addr).then(res=>{\r\n            //       console.log('결과값111:',res)\r\n            //         }).catch(e=>{\r\n            //           alert('error')\r\n            //         })\r\n            //     //지갑정보 insert 회원정보 입력하는 api 이게 입력 되면 check가 값 addr이 null이 아님\r\n            //     WalletServices.insert('network', addr, 'user_id', 'chainid', 'alias1', 'alias2', 'avata.jpg', msgParams, res.result.toString(),'tag').then(res=>{\r\n            //     console.log('결과값:',res)\r\n            //       }).catch(e=>{\r\n            //         alert('error')\r\n            //       })\r\n          });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.home {\r\n  color: #8a8a8a;\r\n}\r\n</style>\r\n"],"sourceRoot":""}]}