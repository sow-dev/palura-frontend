{"remainingRequest":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/babel-loader/lib/index.js!/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/pages/mypage/sub/avataUpload.vue?vue&type=template&id=ea611f0a","dependencies":[{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/pages/mypage/sub/avataUpload.vue","mtime":1634114812000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1632349277000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50IH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICIiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAidy01MCBoLTUwIHJlbGF0aXZlIHBiLTIwIgp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogIm14LWF1dG8gZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIgdy1tYXgtNjQgaC1tYXgtNjQgbXQtNCBiZy1ncmF5IHRleHQtYmx1ZSByZWxhdGl2ZSByb3VuZGVkLWZ1bGwgIHNoYWRvdy1sZyB0cmFja2luZy13aWRlIHVwcGVyY2FzZSBib3JkZXIgYm9yZGVyLWJsdWUgY3Vyc29yLXBvaW50ZXIgaG92ZXI6YmctYmx1ZSBob3Zlcjp0ZXh0LXdoaXRlIgp9OwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJsYWJlbCIsIHsKICBjbGFzczogInctOSBoLTkgYmctZ3JlZW4tNTAwIHJvdW5kZWQtZnVsbCBhYnNvbHV0ZSByaWdodC01IGJvdHRvbS01Igp9LCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlVk5vZGUoImxhYmVsIiwgX2hvaXN0ZWRfMywgW19ob2lzdGVkXzQsICRwcm9wcy51c2VySW5mby5hdmF0YXIgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImltZyIsIHsKICAgIGtleTogMCwKICAgIGNsYXNzOiAicm91bmRlZC1mdWxsIiwKICAgIHNyYzogJHByb3BzLnVzZXJJbmZvLmF2YXRhcgogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJzcmMiXSkpIDogKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJpbWciLCB7CiAgICBrZXk6IDEsCiAgICBjbGFzczogInJvdW5kZWQtZnVsbCIsCiAgICBzcmM6IF9jdHgucGljCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbInNyYyJdKSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8ZGl2IHYtZWxzZSBjbGFzcz1cInctNTIgaC01MiByb3VuZGVkLWZ1bGwgYmctZ3JheS0yMDBcIj4gPC9kaXY+ICIpLCBfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogImZpbGUiLAogICAgY2xhc3M6ICJoaWRkZW4iLAogICAgb25DaGFuZ2U6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25IYW5kbGVDaGFuZ2UgJiYgJG9wdGlvbnMub25IYW5kbGVDaGFuZ2UuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sIG51bGwsIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApXSldKV0pLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgXHJcbjxkaXYgY2xhc3M9XCJmbGV4IHctZnVsbCBiZy1ncmV5LWxpZ2h0ZXJcIj5cclxuICAgIDxsYWJlbCBjbGFzcz1cInctZnVsbCBmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlciBweC00IHB5LTYgYmctd2hpdGUgdGV4dC1ibHVlIHJvdW5kZWQtbGcgc2hhZG93LWxnIHRyYWNraW5nLXdpZGUgdXBwZXJjYXNlIGJvcmRlciBib3JkZXItYmx1ZSBjdXJzb3ItcG9pbnRlciBob3ZlcjpiZy1ibHVlIGhvdmVyOnRleHQtd2hpdGVcIj5cclxuICAgICAgICA8c3ZnIGNsYXNzPVwidy04IGgtOFwiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyMCAyMFwiPlxyXG4gICAgICAgICAgICA8cGF0aCBkPVwiTTE2Ljg4IDkuMUE0IDQgMCAwIDEgMTYgMTdINWE1IDUgMCAwIDEtMS05LjlWN2EzIDMgMCAwIDEgNC41Mi0yLjU5QTQuOTggNC45OCAwIDAgMSAxNyA4YzAgLjM4LS4wNC43NC0uMTIgMS4xek0xMSAxMWgzbC00LTQtNCA0aDN2M2gydi0zelwiIC8+XHJcbiAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtdC0yIHRleHQtYmFzZSBsZWFkaW5nLW5vcm1hbFwiPlNlbGVjdCBhIGZpbGU8L3NwYW4+XHJcbiAgICAgICAgPGlucHV0IHR5cGU9J2ZpbGUnIGNsYXNzPVwiaGlkZGVuXCIgQGNoYW5nZT1cIm9uSGFuZGxlQ2hhbmdlXCIgLz5cclxuICAgIDwvbGFiZWw+XHJcbjwvZGl2PiAiKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxkaXY+XHJcbiAgICA8aW5wdXQgdHlwZT1cImZpbGVcIiAgQGNoYW5nZT1cIm9uSGFuZGxlQ2hhbmdlXCIgcGxhY2Vob2xkZXI9XCJcIiAvPlxyXG48L2Rpdj4gICAgICIpXSwgMjExMgogIC8qIFNUQUJMRV9GUkFHTUVOVCwgREVWX1JPT1RfRlJBR01FTlQgKi8KICApOwp9"},{"version":3,"sources":["/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/pages/mypage/sub/avataUpload.vue"],"names":[],"mappings":";;AACK,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AACA,EAAA,KAAK,EAAC;;;8BACb,YAAA,CAAoF,OAApF,EAAoF;AAA7E,EAAA,KAAK,EAAC;AAAuE,CAApF,EAA0E,IAA1E,EAA0E,CAAA;AAAA;AAA1E,C;;;sDAHR,YAAA,CAcM,KAdN,EAAA,UAAA,EAcM,CAbF,YAAA,CAYE,KAZF,EAAA,UAAA,EAYE,CAXE,YAAA,CAQQ,OARR,EAAA,UAAA,EAQQ,CAPR,UAOQ,EANI,MAAA,CAAA,QAAA,CAAS,M,kBAApB,YAAA,CAAwE,KAAxE,EAAwE;UAAA;AAA5C,IAAA,KAAK,EAAC,cAAsC;AAAtB,IAAA,GAAG,EAAE,MAAA,CAAA,QAAA,CAAS;AAAQ,GAAxE,E,IAAA,E;;AAAA,I,OAAA,C,mBACA,YAAA,CAA4C,KAA5C,EAA4C;UAAA;AAAhC,IAAA,KAAK,EAAC,cAA0B;AAAV,IAAA,GAAG,EAAE,IAAA,CAAA;AAAK,GAA5C,E,IAAA,E;;AAAA,I,OAAA,C,CAKO,EAJP,mBAAA,CAAA,oEAAA,CAIO,EADR,YAAA,CAA6D,OAA7D,EAA6D;AAAtD,IAAA,IAAI,EAAC,MAAiD;AAA1C,IAAA,KAAK,EAAC,QAAoC;AAA1B,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,cAAA,IAAA,QAAA,CAAA,cAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAoB,GAA7D,E,IAAA,E;;AAAA,GACQ,CARR,CAWF,CAZF,CAaE,CAdN,C,EAeA,mBAAA,CAAA,2tBAAA,C,EAUA,mBAAA,CAAA,mGAAA,C","sourcesContent":["<template>\r\n<div class=\"\">\r\n    <div class=\"w-50 h-50 relative pb-20\">\r\n        <label class=\"mx-auto flex flex-col items-center w-max-64 h-max-64 mt-4 bg-gray text-blue relative rounded-full  shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue hover:text-white\">\r\n        <label class=\"w-9 h-9 bg-green-500 rounded-full absolute right-5 bottom-5\"> </label>\r\n         <img v-if=\"userInfo.avatar\" class=\"rounded-full\" :src=\"userInfo.avatar\">\r\n         <img v-else class=\"rounded-full\" :src=\"pic\">\r\n         <!-- <div v-else class=\"w-52 h-52 rounded-full bg-gray-200\"> </div> -->\r\n\r\n         \r\n        <input type='file' class=\"hidden\" @change=\"onHandleChange\" />\r\n        </label>\r\n         \r\n        \r\n</div>\r\n</div>\r\n<!-- \r\n<div class=\"flex w-full bg-grey-lighter\">\r\n    <label class=\"w-full flex flex-col items-center px-4 py-6 bg-white text-blue rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue hover:text-white\">\r\n        <svg class=\"w-8 h-8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n            <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n        </svg>\r\n        <span class=\"mt-2 text-base leading-normal\">Select a file</span>\r\n        <input type='file' class=\"hidden\" @change=\"onHandleChange\" />\r\n    </label>\r\n</div> -->\r\n<!-- <div>\r\n    <input type=\"file\"  @change=\"onHandleChange\" placeholder=\"\" />\r\n</div>     -->\r\n</template>\r\n\r\n<script>\r\n\r\nimport UploadService from '../../../services/upload.service.js'\r\nimport UserService from '../../../services/user.service.js'\r\nimport pic from '@/assets/img/mymape_user.png'\r\n\r\nexport default {\r\n    data: function () {\r\n        return {\r\n            ds:[],\r\n            pic:pic\r\n        }\r\n    },\r\n    created: function () {\r\n        \r\n    },\r\n    computed: {\r\n    inputVal: {\r\n      get() {\r\n        return this.modelValue;\r\n      },\r\n      set(val) {\r\n        this.$emit('update:modelValue', val);\r\n      }\r\n    }\r\n  },\r\n    props: [\"modelValue:String\", \"address\", \"userInfo\"],\r\n    emits:['update:modelValue', 'options'],\r\n    methods: {\r\n        onHandleChange(event) {\r\n            // console.log('event.target.files', event.target.files);\r\n            //   console.log(\"MediaInfo:::\", MediaInfo)\r\n            //   console.log('file received', file);\r\n            const file = event.target.files[0]\r\n\r\n            MediaInfo({\r\n                format: 'JSON'\r\n            }, mediaInfo => {\r\n                if (file) {\r\n                    const reader = new FileReader();\r\n                    const getSize = () => file.size;\r\n                    const readChunk = (chunkSize, offset) =>\r\n                        new Promise((resolve, reject) => {\r\n\r\n                            reader.onload = (event) => {\r\n                                if (event.target.error) {\r\n                                    reject(event.target.error);\r\n                                }\r\n                                resolve(new Uint8Array(event.target.result));\r\n                            }\r\n                            reader.readAsArrayBuffer(file.slice(offset, offset + file.size));\r\n                        })\r\n\r\n                    mediaInfo.analyzeData(getSize, readChunk)\r\n                        .then((info) => {\r\n                            // this.$refs.ta.value = JSON.stringify(result, null, 2);\r\n                            console.log('result:::', info)\r\n                            console.log(\"address !!!!!!\", this.address)\r\n                            UploadService.media(file, this.address, info, reader).then(res => {\r\n                                console.log('uploaded !!! :',res)\r\n                                const imgPath = \"https://parular-contents.s3.ap-northeast-2.amazonaws.com/\" + res.path;\r\n                                // this.$emit('changed', imgPath)\r\n                                this.inputVal =imgPath\r\n                                this.$emit('uploaded', {\r\n                                    id:res.id,\r\n                                    name:res.name,\r\n                                    path:imgPath,\r\n                                    done:true,\r\n                                }),\r\n                                this.$emit('update')\r\n                            })\r\n         \r\n                        })\r\n                        .catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                            UserService.update(this.userInfo.name, this.userInfo.nickname, this.userInfo.email, this.userInfo.kyc, this.userInfo.avatar, this.userInfo.user_id).then(res=>{\r\n                                this.userInfo.avatar = this.inputVal\r\n                                console.log(\"아바타 저장완료\",res)\r\n                            }).catch(e=>{\r\n\r\n                            })\r\n                }\r\n            })\r\n        },\r\n\r\n    }\r\n}\r\n</script>"],"sourceRoot":""}]}