{"remainingRequest":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/babel-loader/lib/index.js!/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/src/pages/authority/sub/WalletProfile.vue?vue&type=template&id=758794a1&scoped=true","dependencies":[{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/src/pages/authority/sub/WalletProfile.vue","mtime":1634287316000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1632349277000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aElkID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgiZGF0YS12LTc1ODc5NGExIik7CgpfcHVzaFNjb3BlSWQoImRhdGEtdi03NTg3OTRhMSIpOwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJ3LWZ1bGwgaXRlbXMtY2VudGVyIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogImZvcm0gcHgtMTAgcGItMTAgc3BhY2UteS0xMiIKfTsKCnZhciBfaG9pc3RlZF8zID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAidW5kZXJsaW5lIG1yLTMgZm9udC1zZW1pYm9sZCB0ZXh0LWxnIgp9LCAiUFJPRklMRSIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAibXQtNSIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAgY2xhc3M6ICJmbGV4IGZsZXgtY29sIG1iLTQiCn07Cgp2YXIgX2hvaXN0ZWRfNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImxhYmVsIiwgewogIGZvcjogIm5hbWUiLAogIGNsYXNzOiAidGV4dC14cyBzbTp0ZXh0LXNtIHRyYWNraW5nLXdpZGUgdGV4dC1ncmF5LTYwMCIKfSwgIiBOYW1lIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzcgPSB7CiAgY2xhc3M6ICJmbGV4IGZsZXgtY29sIG1iLTQiCn07Cgp2YXIgX2hvaXN0ZWRfOCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImxhYmVsIiwgewogIGZvcjogIm5pY2tuYW1lIiwKICBjbGFzczogIm1iLTEgdy0yNCB0ZXh0LXhzIHNtOnRleHQtc20gdHJhY2tpbmctd2lkZSB0ZXh0LWdyYXktNjAwIgp9LCAiIE5pY2sgbmFtZSIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF85ID0gewogIGNsYXNzOiAiZmxleCBmbGV4LWNvbCBtYi00Igp9OwoKdmFyIF9ob2lzdGVkXzEwID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgibGFiZWwiLCB7CiAgZm9yOiAiZW1haWwiLAogIGNsYXNzOiAibWItMSB3LTI0IHRleHQteHMgc206dGV4dC1zbSB0cmFja2luZy13aWRlIHRleHQtZ3JheS02MDAiCn0sICIgZW1haWwiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTEgPSB7CiAgY2xhc3M6ICJ0ZXh0LXJlZC02MDAgZm9udC1saWdodCB0ZXh0LXNtIG15LTUgdHJhbnNpdGlvbiBkdXJhdGlvbi0xNTAgZWFzZS1pbi1vdXQiCn07CnZhciBfaG9pc3RlZF8xMiA9IHsKICBjbGFzczogInctZnVsbCBmbGV4IGp1c3RpZnktZW5kIG15LTUiCn07Cgp2YXIgX2hvaXN0ZWRfMTMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8xNCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImEiLCB7CiAgaHJlZjogIi4vIiwKICBjbGFzczogIkhvbWUgdGV4dC1zbSBmb250LXNlbWlib2xkIgp9LCAiPCBCYWNrIHRvIEhvbWUiLCAtMQovKiBIT0lTVEVEICovCik7CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2hvaXN0ZWRfMywgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF81LCBbX2hvaXN0ZWRfNiwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgiaW5wdXQiLCB7CiAgICBpZDogIm5hbWUiLAogICAgbmFtZTogIm5hbWUiLAogICAgdHlwZTogInRleHQiLAogICAgY2xhc3M6IFsibXQtMyBib3JkZXItYiIsIFt7CiAgICAgICdiZy1yZWQtNTAnOiAhX2N0eC52YWxpZC5uYW1lCiAgICB9LCB7CiAgICAgICdib3JkZXItcmVkLTUwMCc6ICFfY3R4LnZhbGlkLm5hbWUKICAgIH0sIHsKICAgICAgJ2FuaW1hdGUtcHVsc2UnOiAhX2N0eC52YWxpZC5uYW1lCiAgICB9XV0sCiAgICBwbGFjZWhvbGRlcjogIk5hbWUiLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuIF9jdHguaW5wdXROYW1lID0gJGV2ZW50OwogICAgfSkKICB9LCBudWxsLCAyCiAgLyogQ0xBU1MgKi8KICApLCBbW192TW9kZWxUZXh0LCBfY3R4LmlucHV0TmFtZV1dKV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzcsIFtfaG9pc3RlZF84LCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIGlkOiAibmlja25hbWUiLAogICAgbmFtZTogIm5pY2tuYW1lIiwKICAgIHR5cGU6ICJ0ZXh0IiwKICAgIGNsYXNzOiBbIm10LTMgYm9yZGVyLWIiLCBbewogICAgICAnYmctcmVkLTUwJzogIV9jdHgudmFsaWQubmlja25hbWUKICAgIH0sIHsKICAgICAgJ2JvcmRlci1yZWQtNTAwJzogIV9jdHgudmFsaWQubmlja25hbWUKICAgIH0sIHsKICAgICAgJ2FuaW1hdGUtcHVsc2UnOiAhX2N0eC52YWxpZC5uaWNrbmFtZQogICAgfV1dLAogICAgcGxhY2Vob2xkZXI6ICJOaWNrIG5hbWUiLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuIF9jdHguaW5wdXROaWNrbmFtZSA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgMgogIC8qIENMQVNTICovCiAgKSwgW1tfdk1vZGVsVGV4dCwgX2N0eC5pbnB1dE5pY2tuYW1lXV0pXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8c3BhbiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIGZvbnQtbWVkaXVtIHRyYWNraW5nLXdpZGUgdGV4dC1yZWQtNTAwIHRleHQteHMgbXQtMSBtbC0xXCI+XHJcblx0XHRcdCAgICBJbnZhbGlkIG5pY2tuYW1lXHJcbiAgICAgICAgICAgIDwvc3Bhbj4gIiksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOSwgW19ob2lzdGVkXzEwLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIGlkOiAiZW1haWwiLAogICAgbmFtZTogImVtYWlsIiwKICAgIHR5cGU6ICJ0ZXh0IiwKICAgIGNsYXNzOiBbIm10LTMgYm9yZGVyLWIgIiwgW3sKICAgICAgJ2JnLXJlZC01MCc6ICFfY3R4LnZhbGlkLmVtYWlsCiAgICB9LCB7CiAgICAgICdib3JkZXItcmVkLTUwMCc6ICFfY3R4LnZhbGlkLmVtYWlsCiAgICB9LCB7CiAgICAgICdhbmltYXRlLXB1bHNlJzogIV9jdHgudmFsaWQuZW1haWwKICAgIH1dXSwKICAgIHBsYWNlaG9sZGVyOiAiRS1tYWlsIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiBfY3R4LmlucHV0RW1haWwgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDIKICAvKiBDTEFTUyAqLwogICksIFtbX3ZNb2RlbFRleHQsIF9jdHguaW5wdXRFbWFpbF1dKV0pLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPHNwYW4gY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBmb250LW1lZGl1bSB0cmFja2luZy13aWRlIHRleHQtcmVkLTUwMCB0ZXh0LXhzIG10LTEgbWwtMVwiPlxyXG5cdFx0XHQgICAgSW52YWxpZCBuaWNrbmFtZVxyXG4gICAgICAgICAgICA8L3NwYW4+ICIpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJib3JkZXItYlwiIHBsYWNlaG9sZGVyPVwiVVJMXCIgdi1tb2RlbD1cImlucHV0VXJsXCI+PGJyPlxyXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImJvcmRlci1iXCIgcGxhY2Vob2xkZXI9XCJTTlNcIiB2LW1vZGVsPVwiaW5wdXRTbnNcIj48YnI+ICIpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGlucHV0IGlkPVwiY2hlY2tib3hcIiB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiY2hlY2t0ZXh0XCIgdmFsdWU9XCIxXCIgdi1tb2RlbD1cImNoZWNrZWROZXdzTWFpbFwiPlxyXG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwiY2hlY2t0ZXh0XCI+UGxlYXNlIHNpZ24gbWUgdXAgZm9yIHRoZSBuZXdzbGV0dGVyLjwvbGFiZWw+ICIpXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8YnV0dG9uXHJcbiAgICAgICAgICAgIGNsYXNzPVwidy0yNCB0ZXh0LWNlbnRlciBweS0xIHRleHQtYmxhY2sgdHJhbnNpdGlvbi1jb2xvcnMgZHVyYXRpb24tMTUwIGJvcmRlciBib3JkZXItYmxhY2sgZm9jdXM6c2hhZG93LW91dGxpbmUgaG92ZXI6YmctYmxhY2sgaG92ZXI6dGV4dC13aGl0ZVwiXHJcbiAgICAgICAgICAgIHYtb246Y2xpY2s9XCJjb25maXJtXCI+Q29uZmlybTwvYnV0dG9uPjxicj4gIiksIF9jcmVhdGVWTm9kZSgicCIsIF9ob2lzdGVkXzExLCBfdG9EaXNwbGF5U3RyaW5nKF9jdHguZXJyb3JfbXNnKSwgMQogIC8qIFRFWFQgKi8KICApLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPHNwYW4gY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBmb250LW1lZGl1bSB0cmFja2luZy13aWRlIHRleHQtcmVkLTUwMCB0ZXh0LXhzIG10LTEgbWwtMVwiPlxyXG4gICAgICAgICAgICA8L3NwYW4+ICIpLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEyLCBbX2NyZWF0ZVZOb2RlKCJidXR0b24iLCB7CiAgICBjbGFzczogInctMjQgdGV4dC1jZW50ZXIgcHktMSB0ZXh0LWJsYWNrIHRyYW5zaXRpb24tY29sb3JzIGR1cmF0aW9uLTE1MCBib3JkZXIgYm9yZGVyLWJsYWNrIGZvY3VzOnNoYWRvdy1vdXRsaW5lIGhvdmVyOmJnLWJsYWNrIGhvdmVyOnRleHQtd2hpdGUiLAogICAgb25DbGljazogX2NhY2hlWzRdIHx8IChfY2FjaGVbNF0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5jaGVja0R1cGxpY2F0ZSAmJiAkb3B0aW9ucy5jaGVja0R1cGxpY2F0ZS5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIkNvbmZpcm0iKV0pLCBfaG9pc3RlZF8xMywgX2hvaXN0ZWRfMTRdKV0pOwp9KTs="},{"version":3,"sources":["/Users/hyunjongkim/Documents/GitHub/palura-frontend/client-v1.0/src/pages/authority/sub/WalletProfile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"w-full items-center\">\r\n    <div class=\"form px-10 pb-10 space-y-12\">\r\n        <div class=\"underline mr-3 font-semibold text-lg\">PROFILE</div>\r\n        <div class=\"mt-5\">\r\n            <div class=\"flex flex-col mb-4\">\r\n                <label for=\"name\" class=\"text-xs sm:text-sm tracking-wide text-gray-600\"> Name</label>\r\n                <input id=\"name\" name=\"name\" type=\"text\" class=\"mt-3 border-b\" :class=\"[{'bg-red-50':!valid.name}, {'border-red-500':!valid.name}, {'animate-pulse':!valid.name}]\" placeholder=\"Name\" v-model=\"inputName\">\r\n            </div>\r\n            <div class=\"flex flex-col mb-4\">\r\n                <label for=\"nickname\" class=\"mb-1 w-24 text-xs sm:text-sm tracking-wide text-gray-600\"> Nick name</label>\r\n                <input id=\"nickname\" name=\"nickname\" type=\"text\" class=\"mt-3 border-b\" :class=\"[{'bg-red-50':!valid.nickname}, {'border-red-500':!valid.nickname}, {'animate-pulse':!valid.nickname}]\" placeholder=\"Nick name\" v-model=\"inputNickname\">\r\n            </div>\r\n            <!-- <span class=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\">\r\n\t\t\t    Invalid nickname\r\n            </span> -->\r\n            <div class=\"flex flex-col mb-4\">\r\n                <label for=\"email\" class=\"mb-1 w-24 text-xs sm:text-sm tracking-wide text-gray-600\"> email</label>\r\n                <input id=\"email\" name=\"email\" type=\"text\" class=\"mt-3 border-b \" :class=\"[{'bg-red-50':!valid.email}, {'border-red-500':!valid.email}, {'animate-pulse':!valid.email}]\" placeholder=\"E-mail\" v-model=\"inputEmail\">\r\n            </div>\r\n            <!-- <span class=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\">\r\n\t\t\t    Invalid nickname\r\n            </span> -->\r\n            <!-- <input type=\"text\" class=\"border-b\" placeholder=\"URL\" v-model=\"inputUrl\"><br>\r\n            <input type=\"text\" class=\"border-b\" placeholder=\"SNS\" v-model=\"inputSns\"><br> -->\r\n            <!-- <input id=\"checkbox\" type=\"checkbox\" name=\"checktext\" value=\"1\" v-model=\"checkedNewsMail\">\r\n            <label for=\"checktext\">Please sign me up for the newsletter.</label> -->\r\n        </div>\r\n        <!-- <button\r\n            class=\"w-24 text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-black hover:text-white\"\r\n            v-on:click=\"confirm\">Confirm</button><br> -->\r\n\r\n        <p class=\"text-red-600 font-light text-sm my-5 transition duration-150 ease-in-out\">{{error_msg}}</p>\r\n        <!-- <span class=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\">\r\n            </span> -->\r\n        <div class=\"w-full flex justify-end my-5\">\r\n            <button class=\"w-24 text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-black hover:text-white\"\r\n            @click=\"checkDuplicate\">Confirm</button>\r\n        </div>\r\n        <br>\r\n        <a href=\"./\" class=\"Home text-sm font-semibold\">&#60; Back to Home</a>\r\n    </div>\r\n</div>\r\n         \r\n</template>\r\n<script>\r\n// import WalletSignup from \"./WalletSignup.vue\";\r\nimport CompleteSignUp from \"./CompleteSignUp.vue\";\r\nimport WalletService  from \"../../../services/wallet.service.js\";\r\nimport Web3 from 'web3';\r\n\r\nexport default  {\r\n     data: function() {\r\n        return {\r\n            inputName:'',\r\n            inputNickname:'',\r\n            inputEmail:'',\r\n            inputUrl:'',\r\n            inputSns:'',\r\n            checkedNewsMail: [],\r\n            error_msg:'',\r\n            valid:{\r\n                name:true,\r\n                nickname:true,\r\n                email:true,\r\n            }\r\n        }\r\n    },\r\n     computed: {\r\n    web3() {\r\n      // return this.$store.state.web3\r\n      //\r\n      let web3 = new Web3(window.web3.currentProvider);\r\n      return web3;\r\n    }\r\n  },\r\n    components: {\r\n        // WalletSignup\r\n    },\r\n    props: {\r\n        isLogins:Boolean\r\n    },\r\n    methods: {\r\n    validation(){\r\n        this.valid.name = true;\r\n        this.valid.nickname = true;\r\n        this.valid.email = true;\r\n\r\n\r\n       var blank_pattern = /\\s/;\r\n        if (blank_pattern.test(this.inputEmail)) {\r\n            this.error_msg = \"The email not allow blank\"\r\n            this.valid.email = false;\r\n            return false\r\n        }\r\n        if (blank_pattern.test(this.inputNickname)) {\r\n            this.error_msg = \"The nickname not allow blank\"\r\n            this.valid.nickname = false;\r\n            return false\r\n            \r\n        }\r\n\r\n        if (this.inputName.length < 3) {\r\n        this.error_msg = \"The nickname must be at least 3 letter.\"\r\n        this.valid.name = false;\r\n        return false\r\n        }\r\n        if (this.inputNickname.length < 3) {\r\n            this.error_msg = \"The nickname must be at least 3 letter.\"\r\n            this.valid.nickname = false;\r\n            return false\r\n        }\r\n         const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n        if (!emailRegexp.test(this.inputEmail)) {\r\n            this.error_msg = \"invalid mail format\"\r\n            this.valid.email = false;\r\n            return false\r\n        }\r\n       \r\n        return true\r\n    },\r\n    checkDuplicate(){\r\n       if(!this.validation()){\r\n           return;\r\n       }\r\n    \r\n        WalletService.checkDuplicate(this.inputEmail, this.inputNickname).then(res=>{\r\n            console.log(res)\r\n            if(res.data == 'ok'){\r\n                this.error_msg =''\r\n                this.regist()\r\n                // this.$emit()\r\n            }\r\n        }).catch((error)=>{\r\n            console.log('err msg:', error.response.data)\r\n            if(error.response && error.response.data)\r\n                this.error_msg = error.response.data\r\n        })\r\n    },\r\n    async regist() {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            ethereum.eth_requestAccounts\r\n            const connetWallet = window.ethereum.request({\r\n                method: 'eth_requestAccounts'\r\n            })\r\n        }\r\n\r\n       const permissions = await ethereum.request({\r\n                method: 'wallet_requestPermissions',\r\n                params: [{\r\n                    eth_accounts: {}\r\n                }],\r\n        })\r\n        console.log('permissions::', permissions)\r\n\r\n        const accountsPermission = await permissions.find((permission) => permission.parentCapability === 'eth_accounts');\r\n        console.log(\"accountsPermission\", accountsPermission)\r\n        if (!accountsPermission) {\r\n            console.log('eth_accounts permission successfully requested!');\r\n        }\r\n\r\n          \r\n        //     .catch((error) => {\r\n        //         if (error.code === 4001) {\r\n        //             console.log('Permissions needed to continue.');\r\n        //             this.error_msg = \"Permissions needed to continue.\"\r\n        //         } else {\r\n        //             console.error(error);\r\n        //             this.error_msg = error\r\n        //         }\r\n        // });\r\n\r\n        let web3 = new Web3(window.web3.currentProvider)\r\n        let from = await web3.eth.getAccounts();\r\n        const reg_wallet = from[0]\r\n        console.log(\"reg_wallet::\", reg_wallet)\r\n\r\n        const msgParams = `regist ${reg_wallet} ${ Date.parse(new Date()) }`\r\n        \r\n        let strMethod = 'personal_sign'\r\n\r\n        let paramVals = [msgParams, reg_wallet]\r\n        console.log('params:', strMethod, paramVals, reg_wallet)\r\n\r\n        const res= await web3.currentProvider.send(strMethod, paramVals);\r\n        console.log('서명결과:', res)\r\n\r\n        console.log(\"param::\", this.inputName, this.inputNickname, this.inputEmail, 'ETH', reg_wallet, msgParams, res.result)\r\n        WalletService.walletRegist(this.inputName, this.inputNickname, this.inputEmail,\r\n            'ETH', reg_wallet, msgParams, res.result).then(res => {\r\n            console.log('walletUser결과:', res)\r\n            // location.href = \"/signup.html\";\r\n            this.$emit('onNext')\r\n\r\n        }).catch(error => {\r\n            this.error_msg = error\r\n            if(error.response && error.response.data)\r\n                this.error_msg = error.response.data\r\n        })\r\n    },\r\n    onConfirm :  function (event) {\r\n        console.log('11111')\r\n      var vm = this;\r\n      return new Promise(function(resolve, reject){\r\n          if (typeof window.ethereum !== 'undefined') {\r\n          ethereum.eth_requestAccounts\r\n          const connetWallet = window.ethereum.request({\r\n              method: 'eth_requestAccounts'\r\n            })\r\n            console.log('연결완료')\r\n            \r\n            resolve(connetWallet)\r\n        }\r\n        }).then(async function (connetWallet) {\r\n        // event.preventDefault()\r\n        console.log(\"연결지갑주소\"+connetWallet)\r\n        \r\n      \r\n      let web3 = new Web3(window.web3.currentProvider)\r\n      let strMethod = 'personal_sign'\r\n      let from = await web3.eth.getAccounts();\r\n      if (!from[0]) return this.onConnect()\r\n      \r\n      //methods value timestamp\r\n      const msgParams =`regist ${this.inputEmail}/${connetWallet} ${Date.parse(new Date())}`\r\n      let paramVals = [msgParams, from[0]]\r\n      console.log('params:', strMethod, paramVals, from[0])\r\n      \r\n      // this.web3.currentProvider.sendAsync(method, params, from, function (err, result) {\r\n      //   console.log('result:', result)\r\n      // })\r\n    \r\n      let res = await web3.currentProvider.send(strMethod, paramVals);\r\n      \r\n      // let res = await ethereum.request({ method: strMethod , params: paramVals})\r\n\r\n      console.log('서명결과:', res)\r\n      res.address = connetWallet\r\n      return res\r\n    }).then(function(res) {\r\n      \r\n        console.log(\"연결지갑주소2\"+res)  \r\n        let a = JSON.stringify(res)\r\n        console.log(res.address.toString())\r\n        let addr= res.address.toString();\r\n        let result = res.result.toString() //sig\r\n    \r\n        console.log('addr'+addr)\r\n        console.log('res.result.toString()'+res.result.toString())\r\n        // console.log(msgParams[0].name)\r\n    //    console.log('this.checkedNewsMail.length '+this.checkedNewsMail.length\r\n    \r\n        console.log('data.inputName  '+ vm.inputName)\r\n        console.log('data.inputEmail  '+ vm.inputEmail)\r\n        const userName =  vm.inputName;\r\n        const userEmail = vm.inputEmail;\r\n        const userUrl = vm.inputUrl;\r\n        const userSns = vm.inputSns;\r\n        // const chainId = web3.currentProvider.chainId;\r\n        // const networkVersion = web3.currentProvider.networkVersion;\r\n        console.log('web3.currentProvider.selectedAddress::'+web3.currentProvider.selectedAddress)\r\n        console.log('web3.currentProvider.chainId::'+web3.currentProvider.chainId)\r\n        console.log('result::'+result)\r\n        \r\n        WalletService.walletUser(userName, \"nickname\", userEmail, 'eth' , addr,  msgParams, result).then(res=>{\r\n        console.log('walletUser결과:',res)\r\n        // location.href=\"/signup.html\";\r\n        this.$emit('onNext')\r\n          }).catch(e=>{\r\n            alert('error')\r\n          })\r\n      })\r\n    \r\n    \r\n\r\n        // if(this.checkedNewsMail.length){\r\n        \r\n        // }\r\n    },\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n</style>"],"sourceRoot":""}]}