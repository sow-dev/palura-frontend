{"remainingRequest":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/components/DecimalValue.vue?vue&type=template&id=1ed33cd0","dependencies":[{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/components/DecimalValue.vue","mtime":1634000574000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1632349277000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxzcGFuPg0KICAgIHt7aW5wdXRWYWx9fQ0KICA8L3NwYW4+DQo="},{"version":3,"sources":["/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/components/DecimalValue.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/components/DecimalValue.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <span>\r\n    {{inputVal}}\r\n  </span>\r\n</template>\r\n\r\n<script>\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      \r\n    }\r\n  },\r\n  created: function () {\r\n\r\n  },\r\n  computed: {\r\n    inputVal: {\r\n      get() {\r\n        if (this.modelValue) {\r\n          let n = new BigNumber(this.modelValue).toFixed()\r\n          return n;\r\n        }else{\r\n          return '0'\r\n        }\r\n\r\n      },\r\n      set(val) {\r\n        let n = new BigNumber(val)\r\n        this.$emit('update:modelValue', n.toFixed());\r\n      }\r\n    }\r\n  },\r\n  props: ['modelValue'],\r\n  emits: ['update:modelValue'],\r\n  methods: {}\r\n    \r\n}\r\n</script>"]}]}