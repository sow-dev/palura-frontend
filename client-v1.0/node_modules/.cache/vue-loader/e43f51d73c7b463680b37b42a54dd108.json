{"remainingRequest":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/pages/authority/sub/WalletSignupForm.vue?vue&type=style&index=0&id=5097f9b4&scoped=true&lang=css","dependencies":[{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/pages/authority/sub/WalletSignupForm.vue","mtime":1633395576000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1632349277000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouaG9tZXsNCiAgICBjb2xvcjojOGE4YThhOw0KfQ0K"},{"version":3,"sources":["/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/pages/authority/sub/WalletSignupForm.vue"],"names":[],"mappings":";AAyMA,CAAC,CAAC,CAAC,CAAC,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB","file":"/Users/hyunjongkim/Downloads/parula자료들/parula-frontend/client-v1.0/src/pages/authority/sub/WalletSignupForm.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"w-full\">\r\n        <div v-if=\"step=='network'\" class=\"p-10\">\r\n            <div class=\"h-1/2 block\"></div>\r\n            <div class=\"text-lg\">\r\n                <a href=\"#\" class=\"underline  mr-3\" >SIGN UP</a> \r\n            </div>\r\n            <div class=\"my-5 flex flex-col gap-2 text-sm\">\r\n                <p class=\"w-full text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-gray-800 hover:text-white\" \r\n                :class=\"[target=='metamask' ? 'bg-black text-white':'bg-white text-black']\" @click=\"target='metamask'\">Metamask</p>\r\n                <p class=\"w-full text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-gray-800 hover:text-white\"\r\n                :class=\"[target=='walletconnect' ? 'bg-black text-white':'bg-white text-black']\" @click=\"target='walletconnect'\">Wallet Connect</p>\r\n                <p class=\"w-full text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-gray-800 hover:text-white\"\r\n                :class=\"[target=='walletlink' ? 'bg-black text-white':'bg-white text-black']\" @click=\"target='walletlink'\">Wallet Link</p>\r\n                <p class=\"w-full text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-gray-800 hover:text-white\"\r\n                :class=\"[target=='Kaikas' ? 'bg-black text-white':'bg-white text-black']\" @click=\"target='Kaikas'\">Kaikas</p>\r\n            </div>\r\n            <p class=\"text-red-600 font-light text-sm my-5 transition duration-150 ease-in-out  \">{{error_msg}}</p>\r\n            <div>\r\n                <a href=\"./\" class=\" home text-sm font-semibold \" ><span class=\"mr-2\">&#60;</span> Back to Home</a>\r\n            </div>\r\n            <div class=\"flex justify-end mt-10 text-sm\">\r\n                <button class=\"w-16 text-center py-1 text-black transition-colors duration-150 border border-black focus:shadow-outline hover:bg-black hover:text-white\" v-on:click=\"goTerms\">Next</button>\r\n            </div>\r\n\r\n             <div class=\"mt-16 text-gray-500 text-sm font-extralight\">\r\n                Have an accounts?<a href=\"./login.html?mode=login\" class=\"pl-3 font-semibold hover:underline hover:text-black\" >Login</a>\r\n            </div>\r\n        </div>\r\n        <TermsOfService v-else-if=\"step=='terms'\" v-on:onNext=\"goProfile\" />\r\n        <WalletProfile v-else-if=\"step=='profile'\" v-on:onNext=\"step='complete'\" />\r\n        <CompleteSignUp  v-else-if=\"step=='complete'\" />\r\n\r\n        </div>\r\n</template>\r\n\r\n<script>\r\nimport Web3 from 'web3';\r\nimport TermsOfService from \"./TermsOfService.vue\"\r\nimport WalletProfile from \"./WalletProfile.vue\"\r\nimport CompleteSignUp from \"./CompleteSignUp.vue\"\r\n\r\nexport default {\r\n    name: 'signup',\r\n    computed: {\r\n    web3() {\r\n      // return this.$store.state.web3\r\n      //\r\n      let web3 = new Web3(window.web3.currentProvider);\r\n      return web3;\r\n    }\r\n  },\r\n    components: {\r\n        TermsOfService,\r\n        WalletProfile,\r\n        CompleteSignUp\r\n    },\r\n    data: function(){\r\n        return {\r\n            target:'',\r\n            step:'network',\r\n            checkSign: false, //가입여부 확인 데이터(API확인후 반영)\r\n            isTerm : false,\r\n            a : false,\r\n            error_msg:'',\r\n        }\r\n    },\r\n    props: {\r\n        isHiddens: Boolean,\r\n        isNonSigns: Boolean,\r\n        isLogins:Boolean\r\n    },\r\n    \r\n    methods: {\r\n\r\n            goTerms: function () {\r\n                this.error_msg=''\r\n                if(this.target ==''){\r\n                    this.error_msg='Choose a provider to connect your wallet'\r\n                    return;\r\n                }\r\n                if (this.target === 'metamask') {\r\n                    this.step ='terms'\r\n                    // this.onConnect();\r\n                }\r\n            },\r\n            goProfile() {\r\n                this.step='profile'\r\n            },\r\n            close: function () {\r\n                this.$emit(\"changeHidden\")\r\n            },\r\n            \r\n            nextSlide() {\r\n                let activeSlide = document.querySelector('.slide.translate-x-0');\r\n                activeSlide.classList.remove('translate-x-0');\r\n                activeSlide.classList.add('-translate-x-full');\r\n\r\n                let nextSlide = activeSlide.nextElementSibling;\r\n                nextSlide.classList.remove('translate-x-full');\r\n                nextSlide.classList.add('translate-x-0');\r\n            },\r\n\r\n            previousSlide() {\r\n                let activeSlide = document.querySelector('.slide.translate-x-0');\r\n                activeSlide.classList.remove('translate-x-0');\r\n                activeSlide.classList.add('translate-x-full');\r\n\r\n                let previousSlide = activeSlide.previousElementSibling;\r\n                previousSlide.classList.remove('-translate-x-full');\r\n                previousSlide.classList.add('translate-x-0');\r\n            },\r\n    onConnect: function (event) {    \r\n        //1. 지갑주소가 가입되었는지 여부 확인\r\n        //2-1. 가입되어있을때 바로 메타마스크 연결\r\n        //2-2. 가입 안되어있을때\r\n        //3. 프로필 입력컴포넌트 \r\n\r\n    if(this.checkSign===false) {//가입안되었을때\r\n       console.log('this.checkSign'+this.checkSign)\r\n       this.isTerm=true;\r\n       console.log('this.isTerm'+this.isTerm)\r\n       \r\n       return;\r\n    }else {\r\n        //method account timestamp\r\n      const msgParams =`signup ${connetWallet} ${Date.now()}`\r\n      return new Promise(function(resolve, reject){\r\n          if (typeof window.ethereum !== 'undefined') {\r\n          ethereum.eth_requestAccounts\r\n          const connetWallet = window.ethereum.request({\r\n              method: 'eth_requestAccounts'\r\n            })\r\n            console.log('연결완료')\r\n            resolve(connetWallet)\r\n        }\r\n        }).then(async function (connetWallet) {\r\n        // event.preventDefault()\r\n        console.log(\"연결지갑주소\"+connetWallet)\r\n        // const msgParams ='hello'\r\n      \r\n      let web3 = new Web3(window.web3.currentProvider)\r\n      let strMethod = 'personal_sign'\r\n      let from = await web3.eth.getAccounts();\r\n      if (!from[0]) return this.onConnect()\r\n\r\n      let paramVals = [msgParams, from[0]]\r\n      console.log('params:', strMethod, paramVals, from[0])\r\n      \r\n\r\n      let res = await web3.currentProvider.send(strMethod, paramVals);\r\n      \r\n      // let res = await ethereum.request({ method: strMethod , params: paramVals})\r\n\r\n      console.log('서명결과:', res)\r\n      res.address = connetWallet\r\n      return res\r\n    }).then(function(res) {\r\n      \r\n        console.log(\"연결지갑주소2\"+res)  \r\n        let a = JSON.stringify(res)\r\n        console.log(res.address.toString())\r\n        let addr= res.address.toString();\r\n        console.log('a'+a)\r\n        // const paramApi = {\r\n        //   \"network\":\"network\",\r\n        //   // \"account\":res.address,\r\n        //   \"account\": \"0x122feb0fc838540a278ad23a8a5b3b232d476087\",\r\n        //   \"user_id\":\"user_id\",\r\n        //   \"chainid\":\"chainid\",\r\n        //   \"alias1\":\"alias1\",\r\n        //   \"alias2\":\"alias2\",\r\n        //   \"avata\":\"avata.jpg\",\r\n        //   \"msg\":msgParams,\r\n        //   \"sig\":res.result,\r\n        //   \"tag\":\"tag\"\r\n        // }\r\n        console.log('addr'+addr)\r\n        console.log('res.result.toString()'+res.result.toString())\r\n        // console.log(msgParams[0].name)\r\n       \r\n    //    //지갑 주소 존재여부확인 없으면 가입해야함\r\n    //     WalletServices.check(addr).then(res=>{\r\n    //       console.log('결과값111:',res)\r\n    //         }).catch(e=>{\r\n    //           alert('error')\r\n    //         })\r\n    //     //지갑정보 insert 회원정보 입력하는 api 이게 입력 되면 check가 값 addr이 null이 아님    \r\n    //     WalletServices.insert('network', addr, 'user_id', 'chainid', 'alias1', 'alias2', 'avata.jpg', msgParams, res.result.toString(),'tag').then(res=>{\r\n    //     console.log('결과값:',res)\r\n    //       }).catch(e=>{\r\n    //         alert('error')\r\n    //       })\r\n      })\r\n    }   \r\n    },\r\n\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.home{\r\n    color:#8a8a8a;\r\n}\r\n</style>"]}]}